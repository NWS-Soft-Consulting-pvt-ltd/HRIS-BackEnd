const mongoose = require("mongoose");
mongoose.pluralize(null);

const ldshrmCommonEmpMasterInfoSchema = new mongoose.Schema({
    id:{
        type: String,
        unique:true,
        required: true,
    },
    empId: Number,
    eligibleForOT: String,
    oTDivisorId: String,
    freeTicketFrequency: Number,
    dependantNumber: Number,
    maxTickets: Number,
    ticketsEligible: Number,
    leaveDays: Number,
    weekLeave: Number,
    workingDaysInWeek: Number,
    travelClass: String,
    leaveId: String,
    leavePassage: Number,
    leaveEncashment: Number,
    nextPassage: Number,
    nextLeaveEncashment: Number,
    accrualPeriod: Number,
    promotionDate: String,
    lastGrade: Number,
    lastLevel: Number,
    lastDesignation: Number,
    lastIncrementDate: String,
    lastSalaryPeriod: Number,
    LastSalaryDate: String,
    grossSalaryPaid: Number,
    grossDeduction: Number,
    netSalaryPaid: Number,
    amountRounded: Number,
    outstandingLoan: Number,
    bankCode1: Number,
    bankAccount1: String,
    depositAmount1: Number,
    currency1: Number,
    commitmentToBank1: String,
    commitmentReason1: String,
    splitAccount: String,
    bankCode2: Number,
    bankAccount2: String,
    depositAmount2: Number,
    currency2: Number,
    commitmentToBank2: String,
    commitmentReason: String,
    usedAsFiller1: String,
    usedAsFiller2: String,
    companyVehicle: String,
    vehicleNumber: String,
    vehicleMake: String,
    vehicleModel: String,
    companyAccommodation: String,
    companyMobile: String,
    companyMobileValue: Number,
    companyMobileSrNo: String,
    companymobileNumber: String,
    companyMobileDOP: Number,
    employeeUniform: String,
    uniformTrouser: String,
    uniformShoes: String,
    empMemberOf1: String,
    empMemberOf2: String,
    empMemberOf3: String,
    accAnnualLeave: Number,
    accSickLeave: Number,
    accHospitalized: Number,
    accLeaveWPay: Number,
    componsatoryLeave: Number,
    componsateLeave: Number,
    accOtherLV1: Number,
    accOtherLV2: Number,
    accOtherLV3: Number,
    accOtherLV4: Number,
    accOtherLV5: Number,
    cardSelectId: String,
    employeeC4Number: Number,
    gratuityStartDate: String,
    managerialStartDate: String,
    originalReportUnit: String,
    bonusEligibleFlag: String,
    designationReport: String,
    employeeReportTo: Number,
    dateOfUpdate: String,
    timeOfUpdate: Number,
    lastActionMode: String,
    lastUser: String,
    lastWorkStation: String,
    createdById: Number,
    createdDate: String,
    modifiedById: Number,
    ModifiedDate: String,
    isDeleted: Boolean,
    ticketAfter: String,
    oTFactor: String,
    empOnPension: Boolean,
    empOnIncentive: Boolean,
    annualLeavesWorkingDays: Number,
    employeePrevNo1: Number,
    employeePrevNo2: Number,
    empBirthDate: Number,
    empGender: String,
    empTypeCode: String,
    empPensionEligiblity: String,
    empGratuityEligibility: String,
    empSubsection: String,
    empFunction: String

  });

module.exports = mongoose.model("LoginDetails",  ldshrmCommonEmpMasterInfoSchema);